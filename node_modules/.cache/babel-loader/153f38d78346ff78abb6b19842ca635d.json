{"ast":null,"code":"import _objectSpread from\"/Users/xcodedeveloper/Desktop/grade0swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/xcodedeveloper/Desktop/grade0swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect}from\"react\";import{Grid,makeStyles,Paper,Typography}from\"@material-ui/core\";import ArrowDownwardIcon from\"@material-ui/icons/ArrowDownward\";import{useSnackbar}from\"notistack\";import{getBalanceAndSymbol,getReserves}from\"../ethereumFunctions\";import{removeLiquidity,quoteRemoveLiquidity}from\"./LiquidityFunctions\";import{RemoveLiquidityField1,RemoveLiquidityField2}from\"../CoinSwapper/CoinField\";import CoinDialog from\"../CoinSwapper/CoinDialog\";import LoadingButton from\"../Components/LoadingButton\";import WrongNetwork from\"../Components/wrongNetwork\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var styles=function styles(theme){return{paperContainer:{borderRadius:theme.spacing(2),padding:theme.spacing(2),paddingBottom:theme.spacing(3),width:\"40%\",overflow:\"wrap\",background:\"linear-gradient(45deg, #ff0000 30%, #FF8E53 90%)\",color:\"white\"},fullWidth:{width:\"100%\"},values:{width:\"50%\"},title:{textAlign:\"center\",padding:theme.spacing(0.5),marginBottom:theme.spacing(1)},hr:{width:\"100%\"},balance:{padding:theme.spacing(1),overflow:\"wrap\",textAlign:\"center\"},buttonIcon:{marginRight:theme.spacing(1),padding:theme.spacing(0.4)}};};var useStyles=makeStyles(styles);function LiquidityRemover(props){var classes=useStyles();var _useSnackbar=useSnackbar(),enqueueSnackbar=_useSnackbar.enqueueSnackbar;// Stores a record of whether their respective dialog window is open\nvar _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),dialog1Open=_React$useState2[0],setDialog1Open=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),dialog2Open=_React$useState4[0],setDialog2Open=_React$useState4[1];var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),wrongNetworkOpen=_React$useState6[0],setwrongNetworkOpen=_React$useState6[1];// Stores data about their respective coin\nvar _React$useState7=React.useState({address:undefined,symbol:undefined,balance:undefined}),_React$useState8=_slicedToArray(_React$useState7,2),coin1=_React$useState8[0],setCoin1=_React$useState8[1];var _React$useState9=React.useState({address:undefined,symbol:undefined,balance:undefined}),_React$useState10=_slicedToArray(_React$useState9,2),coin2=_React$useState10[0],setCoin2=_React$useState10[1];// Stores the current reserves in the liquidity pool between coin1 and coin2\nvar _React$useState11=React.useState([\"0.0\",\"0.0\"]),_React$useState12=_slicedToArray(_React$useState11,2),reserves=_React$useState12[0],setReserves=_React$useState12[1];// Stores the current value of their respective text box\nvar _React$useState13=React.useState(\"\"),_React$useState14=_slicedToArray(_React$useState13,2),field1Value=_React$useState14[0],setField1Value=_React$useState14[1];// Controls the loading button\nvar _React$useState15=React.useState(false),_React$useState16=_slicedToArray(_React$useState15,2),loading=_React$useState16[0],setLoading=_React$useState16[1];// Stores the liquidity tokens balance of the user\nvar _React$useState17=React.useState(\"\"),_React$useState18=_slicedToArray(_React$useState17,2),liquidityTokens=_React$useState18[0],setLiquidityTokens=_React$useState18[1];// Stores the input and output for the liquidity removal preview\nvar _React$useState19=React.useState([0,0,0]),_React$useState20=_slicedToArray(_React$useState19,2),tokensOut=_React$useState20[0],setTokensOut=_React$useState20[1];// Switches the top and bottom coins, this is called when users hit the swap button or select the opposite\n// token in the dialog (e.g. if coin1 is TokenA and the user selects TokenB when choosing coin2)\nvar switchFields=function switchFields(){setCoin1(coin2);setCoin2(coin1);setReserves(reserves.reverse());};// These functions take an HTML event, pull the data out and puts it into a state variable.\nvar handleChange={field1:function field1(e){setField1Value(e.target.value);}};// Turns the account's balance into something nice and readable\nvar formatBalance=function formatBalance(balance,symbol){if(balance&&symbol)return parseFloat(balance).toPrecision(8)+\" \"+symbol;else return\"0.0\";};// Turns the coin's reserves into something nice and readable\nvar formatReserve=function formatReserve(reserve,symbol){if(reserve&&symbol)return reserve+\" \"+symbol;else return\"0.0\";};// Determines whether the button should be enabled or not\nvar isButtonEnabled=function isButtonEnabled(){// If both coins have been selected, and a valid float has been entered for both, which are less than the user's balances, then return true\nvar parsedInput=parseFloat(field1Value);return coin1.address&&coin2.address&&parsedInput!==NaN&&0<parsedInput&&parsedInput<=liquidityTokens;};var remove=function remove(){console.log(\"Attempting to remove liquidity...\");setLoading(true);removeLiquidity(coin1.address,coin2.address,field1Value,0,0,props.network.router,props.network.account,props.network.signer,props.network.factory).then(function(){setLoading(false);// If the transaction was successful, we clear to input to make sure the user doesn't accidental redo the transfer\nsetField1Value(\"\");enqueueSnackbar(\"Removal Successful\",{variant:\"success\"});}).catch(function(e){setLoading(false);enqueueSnackbar(\"Deployment Failed (\"+e.message+\")\",{variant:\"error\",autoHideDuration:10000});});};// Called when the dialog window for coin1 exits\nvar onToken1Selected=function onToken1Selected(address){// Close the dialog window\nsetDialog1Open(false);// If the user inputs the same token, we want to switch the data in the fields\nif(address===coin2.address){switchFields();}// We only update the values if the user provides a token\nelse if(address){// Getting some token data is async, so we need to wait for the data to return, hence the promise\ngetBalanceAndSymbol(props.network.account,address,props.network.provider,props.network.signer,props.network.weth.address,props.network.coins).then(function(data){setCoin1({address:address,symbol:data.symbol,balance:data.balance});});}};// Called when the dialog window for coin2 exits\nvar onToken2Selected=function onToken2Selected(address){// Close the dialog window\nsetDialog2Open(false);// If the user inputs the same token, we want to switch the data in the fields\nif(address===coin1.address){switchFields();}// We only update the values if the user provides a token\nelse if(address){// Getting some token data is async, so we need to wait for the data to return, hence the promise\ngetBalanceAndSymbol(props.network.account,address,props.network.provider,props.network.signer,props.network.weth.address,props.network.coins).then(function(data){setCoin2({address:address,symbol:data.symbol,balance:data.balance});});}};// This hook is called when either of the state variables `coin1.address` or `coin2.address` change.\n// This means that when the user selects a different coin to convert between, or the coins are swapped,\n// the new reserves will be calculated.\nuseEffect(function(){console.log(\"Trying to get reserves between:\\n\"+coin1.address+\"\\n\"+coin2.address);if(coin1.address&&coin2.address&&props.network.account){getReserves(coin1.address,coin2.address,props.network.factory,props.network.signer,props.network.account).then(function(data){setReserves([data[0],data[1]]);setLiquidityTokens(data[2]);});}},[coin1.address,coin2.address,props.network.account,props.network.factory,props.network.signer]);// This hook is called when either of the state variables `field1Value`, `coin1.address` or `coin2.address` change.\n// It will give a preview of the liquidity removal.\nuseEffect(function(){if(isButtonEnabled()){console.log(\"Trying to preview the liquidity removal\");quoteRemoveLiquidity(coin1.address,coin2.address,field1Value,props.network.factory,props.network.signer).then(function(data){setTokensOut(data);});}},[coin1.address,coin2.address,field1Value,props.network.factory,props.network.signer]);useEffect(function(){// This hook creates a timeout that will run every ~10 seconds, it's role is to check if the user's balance has\n// updated has changed. This allows them to see when a transaction completes by looking at the balance output.\nvar coinTimeout=setTimeout(function(){console.log(\"Checking balances & Getting reserves...\");if(coin1.address&&coin2.address&&props.network.account){getReserves(coin1.address,coin2.address,props.network.factory,props.network.signer,props.network.account).then(function(data){setReserves([data[0],data[1]]);setLiquidityTokens(data[2]);});}if(coin1.address&&props.network.account&&!wrongNetworkOpen){getBalanceAndSymbol(props.network.account,coin1.address,props.network.provider,props.network.signer,props.network.weth.address,props.network.coins).then(function(data){setCoin1(_objectSpread(_objectSpread({},coin1),{},{balance:data.balance}));});}if(coin2.address&&props.network.account&&!wrongNetworkOpen){getBalanceAndSymbol(props.network.account,coin2.address,props.network.provider,props.network.signer,props.network.weth.address,props.network.coins).then(function(data){setCoin2(_objectSpread(_objectSpread({},coin2),{},{balance:data.balance}));});}},10000);return function(){return clearTimeout(coinTimeout);};});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",className:classes.title}),/*#__PURE__*/_jsx(CoinDialog,{open:dialog1Open,onClose:onToken1Selected,coins:props.network.coins,signer:props.network.signer}),/*#__PURE__*/_jsx(CoinDialog,{open:dialog2Open,onClose:onToken2Selected,coins:props.network.coins,signer:props.network.signer}),/*#__PURE__*/_jsx(WrongNetwork,{open:wrongNetworkOpen}),/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"column\",alignItems:\"center\",spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,className:classes.fullWidth,children:/*#__PURE__*/_jsx(RemoveLiquidityField1,{activeField:true,value:field1Value,onClick:function onClick(){return setDialog1Open(true);},onChange:handleChange.field1,symbol:coin1.symbol!==undefined?coin1.symbol:\"Select\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,className:classes.fullWidth,children:/*#__PURE__*/_jsx(RemoveLiquidityField2,{activeField:true,onClick:function onClick(){return setDialog2Open(true);},symbol:coin2.symbol!==undefined?coin2.symbol:\"Select\"})})]}),/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",alignItems:\"center\",justifyContent:\"center\",spacing:4,className:classes.balance,children:[/*#__PURE__*/_jsx(\"hr\",{className:classes.hr}),/*#__PURE__*/_jsxs(Grid,{container:true,item:true,className:classes.values,direction:\"column\",alignItems:\"center\",spacing:2,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Your Balances\"}),/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:classes.balance,children:formatBalance(coin1.balance,coin1.symbol)})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:classes.balance,children:formatBalance(coin2.balance,coin2.symbol)})})]}),/*#__PURE__*/_jsx(\"hr\",{className:classes.hr}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Reserves\"}),/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:classes.balance,children:formatReserve(reserves[0],coin1.symbol)})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:classes.balance,children:formatReserve(reserves[1],coin2.symbol)})})]}),/*#__PURE__*/_jsx(\"hr\",{className:classes.hr}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Your Liquidity Pool Tokens\"}),/*#__PURE__*/_jsx(Grid,{container:true,direction:\"row\",justifyContent:\"center\",children:/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:classes.balance,children:formatReserve(liquidityTokens,\"UNI-V2\")})})})]}),/*#__PURE__*/_jsx(Paper,{className:classes.paperContainer,children:/*#__PURE__*/_jsxs(Grid,{container:true,item:true,direction:\"column\",alignItems:\"center\",spacing:2,className:classes.fullWidth,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Liquidity Pool Tokens in\"}),/*#__PURE__*/_jsx(Grid,{container:true,direction:\"row\",justifyContent:\"center\",children:/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:classes.balance,children:formatBalance(tokensOut[0],\"UNI-V2\")})})}),/*#__PURE__*/_jsx(\"hr\",{className:classes.hr}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Tokens Out\"}),/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:classes.balance,children:formatBalance(tokensOut[1],coin1.symbol)})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:classes.balance,children:formatBalance(tokensOut[2],coin2.symbol)})})]})]})}),/*#__PURE__*/_jsx(\"hr\",{className:classes.hr})]}),/*#__PURE__*/_jsx(Grid,{container:true,direction:\"column\",alignItems:\"center\",spacing:2,children:/*#__PURE__*/_jsxs(LoadingButton,{loading:loading,valid:isButtonEnabled(),success:false,fail:false,onClick:remove,children:[/*#__PURE__*/_jsx(ArrowDownwardIcon,{className:classes.buttonIcon}),\"Remove\"]})})]});}export default LiquidityRemover;","map":{"version":3,"sources":["/Users/xcodedeveloper/Desktop/grade0swap/src/Liquidity/RemoveLiquidity.js"],"names":["React","useEffect","Grid","makeStyles","Paper","Typography","ArrowDownwardIcon","useSnackbar","getBalanceAndSymbol","getReserves","removeLiquidity","quoteRemoveLiquidity","RemoveLiquidityField1","RemoveLiquidityField2","CoinDialog","LoadingButton","WrongNetwork","styles","theme","paperContainer","borderRadius","spacing","padding","paddingBottom","width","overflow","background","color","fullWidth","values","title","textAlign","marginBottom","hr","balance","buttonIcon","marginRight","useStyles","LiquidityRemover","props","classes","enqueueSnackbar","useState","dialog1Open","setDialog1Open","dialog2Open","setDialog2Open","wrongNetworkOpen","setwrongNetworkOpen","address","undefined","symbol","coin1","setCoin1","coin2","setCoin2","reserves","setReserves","field1Value","setField1Value","loading","setLoading","liquidityTokens","setLiquidityTokens","tokensOut","setTokensOut","switchFields","reverse","handleChange","field1","e","target","value","formatBalance","parseFloat","toPrecision","formatReserve","reserve","isButtonEnabled","parsedInput","NaN","remove","console","log","network","router","account","signer","factory","then","variant","catch","message","autoHideDuration","onToken1Selected","provider","weth","coins","data","onToken2Selected","coinTimeout","setTimeout","clearTimeout"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Grid, makeStyles, Paper, Typography } from \"@material-ui/core\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { useSnackbar } from \"notistack\";\nimport {\n  getBalanceAndSymbol,\n  getReserves,\n} from \"../ethereumFunctions\";\nimport { removeLiquidity, quoteRemoveLiquidity } from \"./LiquidityFunctions\";\nimport {\n  RemoveLiquidityField1,\n  RemoveLiquidityField2,\n} from \"../CoinSwapper/CoinField\";\nimport CoinDialog from \"../CoinSwapper/CoinDialog\";\nimport LoadingButton from \"../Components/LoadingButton\";\nimport WrongNetwork from \"../Components/wrongNetwork\";\n\nconst styles = (theme) => ({\n  paperContainer: {\n    borderRadius: theme.spacing(2),\n    padding: theme.spacing(2),\n    paddingBottom: theme.spacing(3),\n    width: \"40%\",\n    overflow: \"wrap\",\n    background: \"linear-gradient(45deg, #ff0000 30%, #FF8E53 90%)\",\n    color: \"white\",\n  },\n  fullWidth: {\n    width: \"100%\",\n  },\n  values: {\n    width: \"50%\",\n  },\n  title: {\n    textAlign: \"center\",\n    padding: theme.spacing(0.5),\n    marginBottom: theme.spacing(1),\n  },\n  hr: {\n    width: \"100%\",\n  },\n  balance: {\n    padding: theme.spacing(1),\n    overflow: \"wrap\",\n    textAlign: \"center\",\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.4),\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nfunction LiquidityRemover(props) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  // Stores a record of whether their respective dialog window is open\n  const [dialog1Open, setDialog1Open] = React.useState(false);\n  const [dialog2Open, setDialog2Open] = React.useState(false);\n  const [wrongNetworkOpen, setwrongNetworkOpen] = React.useState(false);\n\n\n  // Stores data about their respective coin\n  const [coin1, setCoin1] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined,\n  });\n  const [coin2, setCoin2] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined,\n  });\n\n  // Stores the current reserves in the liquidity pool between coin1 and coin2\n  const [reserves, setReserves] = React.useState([\"0.0\", \"0.0\"]);\n\n  // Stores the current value of their respective text box\n  const [field1Value, setField1Value] = React.useState(\"\");\n\n  // Controls the loading button\n  const [loading, setLoading] = React.useState(false);\n\n  // Stores the liquidity tokens balance of the user\n  const [liquidityTokens, setLiquidityTokens] = React.useState(\"\");\n\n  // Stores the input and output for the liquidity removal preview\n  const [tokensOut, setTokensOut] = React.useState([0, 0, 0]);\n\n  // Switches the top and bottom coins, this is called when users hit the swap button or select the opposite\n  // token in the dialog (e.g. if coin1 is TokenA and the user selects TokenB when choosing coin2)\n  const switchFields = () => {\n    setCoin1(coin2);\n    setCoin2(coin1);\n    setReserves(reserves.reverse());\n  };\n\n  // These functions take an HTML event, pull the data out and puts it into a state variable.\n  const handleChange = {\n    field1: (e) => {\n      setField1Value(e.target.value);\n    },\n  };\n\n  // Turns the account's balance into something nice and readable\n  const formatBalance = (balance, symbol) => {\n    if (balance && symbol)\n      return parseFloat(balance).toPrecision(8) + \" \" + symbol;\n    else return \"0.0\";\n  };\n\n  // Turns the coin's reserves into something nice and readable\n  const formatReserve = (reserve, symbol) => {\n    if (reserve && symbol) return reserve + \" \" + symbol;\n    else return \"0.0\";\n  };\n\n  // Determines whether the button should be enabled or not\n  const isButtonEnabled = () => {\n\n    // If both coins have been selected, and a valid float has been entered for both, which are less than the user's balances, then return true\n    const parsedInput = parseFloat(field1Value);\n    return (\n      coin1.address &&\n      coin2.address &&\n      parsedInput !== NaN &&\n      0 < parsedInput &&\n      parsedInput <= liquidityTokens\n    );\n  };\n\n  const remove = () => {\n    console.log(\"Attempting to remove liquidity...\");\n    setLoading(true);\n\n    removeLiquidity(\n      coin1.address,\n      coin2.address,\n      field1Value,\n      0,\n      0,\n      props.network.router,\n      props.network.account,\n      props.network.signer,\n      props.network.factory\n    )\n      .then(() => {\n        setLoading(false);\n\n        // If the transaction was successful, we clear to input to make sure the user doesn't accidental redo the transfer\n        setField1Value(\"\");\n        enqueueSnackbar(\"Removal Successful\", { variant: \"success\" });\n      })\n      .catch((e) => {\n        setLoading(false);\n        enqueueSnackbar(\"Deployment Failed (\" + e.message + \")\", {\n          variant: \"error\",\n          autoHideDuration: 10000,\n        });\n      });\n  };\n\n  // Called when the dialog window for coin1 exits\n  const onToken1Selected = (address) => {\n    // Close the dialog window\n    setDialog1Open(false);\n\n    // If the user inputs the same token, we want to switch the data in the fields\n    if (address === coin2.address) {\n      switchFields();\n    }\n    // We only update the values if the user provides a token\n    else if (address) {\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\n      getBalanceAndSymbol(\n        props.network.account,\n        address,\n        props.network.provider,\n        props.network.signer,\n        props.network.weth.address,\n        props.network.coins\n        ).then((data) => {\n        setCoin1({\n          address: address,\n          symbol: data.symbol,\n          balance: data.balance,\n        });\n      });\n    }\n  };\n\n  // Called when the dialog window for coin2 exits\n  const onToken2Selected = (address) => {\n    // Close the dialog window\n    setDialog2Open(false);\n\n    // If the user inputs the same token, we want to switch the data in the fields\n    if (address === coin1.address) {\n      switchFields();\n    }\n    // We only update the values if the user provides a token\n    else if (address) {\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\n      getBalanceAndSymbol(props.network.account,\n        address,\n        props.network.provider,\n        props.network.signer,\n        props.network.weth.address,\n        props.network.coins\n        ).then((data) => {\n        setCoin2({\n          address: address,\n          symbol: data.symbol,\n          balance: data.balance,\n        });\n      });\n    }\n  };\n\n  // This hook is called when either of the state variables `coin1.address` or `coin2.address` change.\n  // This means that when the user selects a different coin to convert between, or the coins are swapped,\n  // the new reserves will be calculated.\n  useEffect(() => {\n    console.log(\n      \"Trying to get reserves between:\\n\" + coin1.address + \"\\n\" + coin2.address\n    );\n\n    if (coin1.address && coin2.address && props.network.account) {\n      getReserves(\n        coin1.address,\n        coin2.address,\n        props.network.factory,\n        props.network.signer,\n        props.network.account).then(\n        (data) => {\n          setReserves([data[0], data[1]]);\n          setLiquidityTokens(data[2]);\n        }\n      );\n    }\n  }, [coin1.address, coin2.address, props.network.account, props.network.factory, props.network.signer]);\n\n  // This hook is called when either of the state variables `field1Value`, `coin1.address` or `coin2.address` change.\n  // It will give a preview of the liquidity removal.\n  useEffect(() => {\n    if (isButtonEnabled()) {\n      console.log(\"Trying to preview the liquidity removal\");\n      quoteRemoveLiquidity(\n        coin1.address,\n        coin2.address,\n        field1Value,\n        props.network.factory,\n        props.network.signer\n      ).then((data) => {\n        setTokensOut(data);\n      });\n    }\n  }, [coin1.address, coin2.address, field1Value, props.network.factory, props.network.signer]);\n\n  useEffect(() => {\n    // This hook creates a timeout that will run every ~10 seconds, it's role is to check if the user's balance has\n    // updated has changed. This allows them to see when a transaction completes by looking at the balance output.\n\n    const coinTimeout = setTimeout(() => {\n      console.log(\"Checking balances & Getting reserves...\");\n\n      if (coin1.address && coin2.address && props.network.account) {\n        getReserves(\n          coin1.address,\n          coin2.address,\n          props.network.factory,\n          props.network.signer,\n          props.network.account\n        ).then((data) => {\n          setReserves([data[0], data[1]]);\n          setLiquidityTokens(data[2]);\n        });\n      }\n\n      if (coin1.address && props.network.account &&!wrongNetworkOpen) {\n        getBalanceAndSymbol(\n          props.network.account,\n          coin1.address, props.network.provider,\n          props.network.signer,\n          props.network.weth.address,\n          props.network.coins\n          ).then(\n          (data) => {\n            setCoin1({\n              ...coin1,\n              balance: data.balance,\n            });\n          }\n        );\n      }\n      if (coin2.address && props.network.account &&!wrongNetworkOpen) {\n        getBalanceAndSymbol(props.network.account,\n          coin2.address,\n          props.network.provider,\n          props.network.signer,\n          props.network.weth.address,\n          props.network.coins\n          ).then(\n          (data) => {\n            setCoin2({\n              ...coin2,\n              balance: data.balance,\n            });\n          }\n        );\n      }\n    }, 10000);\n\n    return () => clearTimeout(coinTimeout);\n  });\n\n  return (\n    <div>\n      {/* Coin Swapper */}\n      <Typography variant=\"h5\" className={classes.title}></Typography>\n\n      {/* Dialog Windows */}\n      <CoinDialog\n        open={dialog1Open}\n        onClose={onToken1Selected}\n        coins={props.network.coins}\n        signer={props.network.signer}\n      />\n      <CoinDialog\n        open={dialog2Open}\n        onClose={onToken2Selected}\n        coins={props.network.coins}\n        signer={props.network.signer}\n      />\n      <WrongNetwork\n        open={wrongNetworkOpen}\n      />\n\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\n        <Grid item xs={12} className={classes.fullWidth}>\n          <RemoveLiquidityField1\n            activeField={true}\n            value={field1Value}\n            onClick={() => setDialog1Open(true)}\n            onChange={handleChange.field1}\n            symbol={coin1.symbol !== undefined ? coin1.symbol : \"Select\"}\n          />\n        </Grid>\n\n        <Grid item xs={12} className={classes.fullWidth}>\n          <RemoveLiquidityField2\n            activeField={true}\n            onClick={() => setDialog2Open(true)}\n            symbol={coin2.symbol !== undefined ? coin2.symbol : \"Select\"}\n          />\n        </Grid>\n      </Grid>\n\n      <Grid\n        container\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        spacing={4}\n        className={classes.balance}\n      >\n        <hr className={classes.hr} />\n        <Grid\n          container\n          item\n          className={classes.values}\n          direction=\"column\"\n          alignItems=\"center\"\n          spacing={2}\n        >\n          {/* Balance Display */}\n          <Typography variant=\"h6\">Your Balances</Typography>\n          <Grid container direction=\"row\" justifyContent=\"space-between\">\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatBalance(coin1.balance, coin1.symbol)}\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatBalance(coin2.balance, coin2.symbol)}\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <hr className={classes.hr} />\n\n          {/* Reserves Display */}\n          <Typography variant=\"h6\">Reserves</Typography>\n          <Grid container direction=\"row\" justifyContent=\"space-between\">\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatReserve(reserves[0], coin1.symbol)}\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatReserve(reserves[1], coin2.symbol)}\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <hr className={classes.hr} />\n\n          {/* Liquidity Tokens Display */}\n          <Typography variant=\"h6\">Your Liquidity Pool Tokens</Typography>\n          <Grid container direction=\"row\" justifyContent=\"center\">\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatReserve(liquidityTokens, \"UNI-V2\")}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Paper className={classes.paperContainer}>\n          {/*Red  Display to show the quote */}\n          <Grid\n            container\n            item\n            direction=\"column\"\n            alignItems=\"center\"\n            spacing={2}\n            className={classes.fullWidth}\n          >\n            {/* Tokens in */}\n            <Typography variant=\"h6\">Liquidity Pool Tokens in</Typography>\n            <Grid container direction=\"row\" justifyContent=\"center\">\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatBalance(tokensOut[0], \"UNI-V2\")}\n                </Typography>\n              </Grid>\n            </Grid>\n\n            <hr className={classes.hr} />\n\n            {/* Liquidity Tokens Display */}\n            <Typography variant=\"h6\">Tokens Out</Typography>\n            <Grid container direction=\"row\" justifyContent=\"space-between\">\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatBalance(tokensOut[1], coin1.symbol)}\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatBalance(tokensOut[2], coin2.symbol)}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Paper>\n        <hr className={classes.hr} />\n      </Grid>\n\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\n        <LoadingButton\n          loading={loading}\n          valid={isButtonEnabled()}\n          success={false}\n          fail={false}\n          onClick={remove}\n        >\n          <ArrowDownwardIcon className={classes.buttonIcon} />\n          Remove\n        </LoadingButton>\n      </Grid>\n    </div>\n  );\n}\n\nexport default LiquidityRemover;\n"]},"metadata":{},"sourceType":"module"}